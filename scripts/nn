#!/bin/bash
# vim: set filetype=sh :
# author: robf
# description: simple notes creating script
# date: 2024-04-08

TODAY=$(date -I)
DATETIME=$(date +'%Y-%m-%dT%H:%M:%S%Z')

generate_random_arg() {
    echo $(date +%s | sha256sum | base64 | head -c 8)
}

safe_filename() {
    filename=$@
    echo -n $filename | tr -sc '[:alpha:]\.' '-' | tr '[:upper:]' '[:lower:]' | tr -d '\.$'
}

# Determine how many arguments were provided
INPUT=
if [ $# -eq 2 ]; then
    section=$1
    title=$2
    if [ "$title" = "" ]; then
        title=$(generate_random_arg)
    fi
elif [ $# -eq 1 ]; then
    section=$1
    # title=$(generate_random_arg)
    echo -n "enter new title: "
    read title
    if [ "$title" = "" ]; then
        title=$(generate_random_arg)
    fi
elif [ $# -eq 0 ]; then
    # Check if stdin is available
    if [ -t 0 ]; then
        # No stdin, generate two arguments
        section="zet"
        # title=$(generate_random_arg)
        echo -n "enter new title: "
        read title
        if [ "$title" = "" ]; then
            title=$(generate_random_arg)
        fi
    else
        section="zet"
        INPUT=$(cat -)
        title=$(echo -en "$INPUT" | head -n 1)
    fi
else
    echo "Invalid number of arguments provided."
    exit 1
fi

if [ -z "$SECOND_HOME" ]; then
    echo "error: you must configure ~/.config/second/home"
    exit 1
fi

# create a new note
NN_SECTION_DIR=$SECOND_HOME/$section
[ ! -d "$NN_SECTION_DIR" ] && mkdir -p "$NN_SECTION_DIR"

# create or update a new day note
DAY_FILENAME=
DAY_SECTION_DIR=
if [ "$section" != "day" ]; then
    DAY_SECTION_DIR=$SECOND_HOME/day
    DAY_FILENAME=$DAY_SECTION_DIR/${TODAY}.md
    [ ! -d "$DAY_SECTION_DIR" ] && mkdir -p "$DAY_SECTION_DIR"
fi

stitle=$(safe_filename "$title")
filename=$NN_SECTION_DIR/${stitle}.md

#
# capture this output for vim external command
#
echo "[$title]($filename)"

#
# Create a new zettelcasten note
#
if [ ! -e "$filename" ]; then
    cat >"$filename" <<TEMPLATE
---
title: $title
author: $USER
section: $section
date: $TODAY
labels:

---
## $title

$INPUT

TEMPLATE
fi

#
# Create a diary note
#
if [ ! -z "$DAY_FILENAME" ]; then
    if [ ! -e "$DAY_FILENAME" ]; then
        cat >"$DAY_FILENAME" <<TEMPLATE
---
title: $TODAY
author: $USER
date: $TODAY
labels:

---
## Daily journal

TEMPLATE

    fi
    # append the new note to the current day
    cat >>"$DAY_FILENAME" <<TEMPLATE
[$title]($filename)
TEMPLATE

fi

# Local processing
# If we've been called from a shell, open vim
GP=$(ps -o ppid= -p $PPID | xargs -n 1 ps -o ppid=,comm= -p)
# echo $GP
if ! echo "$GP" | grep nvim >/dev/null; then
    nvim "$filename"
fi
