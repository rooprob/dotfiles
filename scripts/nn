#!/bin/bash
# vim: set filetype=sh :
# author: robf
# description: simple notes creating script
# date: 2024-04-08

TODAY=$(date -I)
DATETIME=$(date +'%Y-%m-%dT%H:%M:%S%Z')
INPUT=${@:-$(cat -)}
HASH=$(echo $INPUT | sha256sum | cut -c 1-8 | tr -d '\n')

section="${SECTION:-zet}"
title="${TITLE:-$HASH}"

if [ -z "$SECOND_HOME" ]; then
    echo "error: you must configure ~/.config/second/home"
    exit 1
fi

# create a new note
NN_SECTION_DIR=$SECOND_HOME/$section
[ ! -d "$NN_SECTION_DIR" ] && mkdir -p "$NN_SECTION_DIR"

# create or update a new day note
DAY_FILENAME=
DAY_SECTION_DIR=
if [ "$section" != "day" ]; then
    DAY_SECTION_DIR=$SECOND_HOME/day
    DAY_FILENAME=$DAY_SECTION_DIR/${TODAY}.md
    [ ! -d "$DAY_SECTION_DIR" ] && mkdir -p "$DAY_SECTION_DIR"
fi

filename=$NN_SECTION_DIR/${title}.md
echo "[$title]($filename)"

if [ ! -e "$filename" ]; then
    cat >"$filename" <<TEMPLATE
---
title: $title
author: $USER
section: $section
date: $TODAY
labels:

---
## $title

$INPUT

TEMPLATE
fi

if [ ! -z "$DAY_FILENAME" ]; then
    if [ ! -e "$DAY_FILENAME" ]; then
        cat >"$DAY_FILENAME" <<TEMPLATE
---
title: $TODAY
author: $USER
date: $TODAY
labels:

---
## Daily journal

TEMPLATE

    fi
    # append the new note to the current day
    cat >>"$DAY_FILENAME" <<TEMPLATE
[$title]($filename)
TEMPLATE

fi

GP=$(ps -o ppid= -p $PPID | xargs -n 1 ps -o ppid=,comm= -p)

# echo $GP

if ! echo "$GP" | grep nvim >/dev/null; then
    nvim "$filename"
fi
